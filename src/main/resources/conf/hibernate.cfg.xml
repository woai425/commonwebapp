<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE hibernate-configuration PUBLIC
		"-//Hibernate/Hibernate Configuration DTD 3.0//EN"
		"http://hibernate.sourceforge.net/hibernate-configuration-3.0.dtd">
<hibernate-configuration>
    <session-factory > 	
        <!--  hibernate被spring整合后，这里配置放到applicationContext.XML中 
        <property name="hibernate.connection.driver_class">oracle.jdbc.driver.OracleDriver</property>
        <property name="hibernate.connection.password">icbc</property>
        <property name="hibernate.connection.url">jdbc:oracle:thin:@172.16.28.150:1521:sysi</property>
        <property name="hibernate.connection.username">icbc</property>
        -->
        <!-- 方言 -->
        <property name="hibernate.dialect">org.hibernate.dialect.MySQLDialect</property>
        
        <!-- 是否显示SQL -->
        <property name="hibernate.show_sql">false</property>
        <!-- 是否为显示的sql格式化 -->
        <property name="hibernate.format_sql">true</property>
        <!-- 是否以String方式来处理Clob类型的数据 -->
        <property name="hibernate.connection.SetBigStringTryClob">true</property>
        <!-- 是否在JDBC读写二进制(binary)或可序列化(serializable)的数据类型时使用流 (Stream)-->
        <property name="hibernate.jdbc.use_streams_for_binary">true</property>

        <!-- hibernate的事物隔离级别：1=Read Uncommited 可读未提交   2=Read Commited 可读已提交   
        4=Repeatable Read 可重复读（ MySQL默认级别）  8=Serializable 串行化 -->
        <property name="hibernate.connection.isolation">4</property>
        
        <!-- Enable Second-Level Cache and Query Cache Settings 
        <property name="cache.provider_configuration">/ehcache.xml</property>指定缓存配置文件位置 
        <property name="cache.use_query_cache">true</property>启动"查询缓存"如果想缓存使用findall()、list()、Iterator()、createCriteria()、createQuery()等方法获得的数据结果集,必须配置此项
        <property name="cache.use_second_level_cache">false</property> 二级缓存开关
        <property name="cache.use_structured_entries">true</property> 强制Hibernate以更人性化的格式将数据存入二级缓存 
        <property name="cache.region.factory_class">org.hibernate.cache.ehcache.EhCacheRegionFactory</property>  高速缓存提供程序 
        <property name="hibernate.generate_statistics">true</property> Hibernate将收集有助于性能调节的统计数据 
        -->
        <!-- 生成表的策略 -->
        <!-- create-drop:表示在hebarinate初始化时创建表格,程序运行结束的时候会删除相应的表格，在实际项目中不用 -->
        <!-- create:在hibernate初始化时会创建表格，在运行结束之后不删除表格，而是在下一次运行的时候如果有旧的删掉，没有旧的，重新建表格-->
        <!-- update :只是根据映射文件去和数据库中的表对应起来，如果不一致，就更新表的结构-->
        <!-- validate:校验映射文件和数据库中的表是不是能对应起来，不能对应报错，实际中常用-->
        <property name="hibernate.hbm2ddl.auto">update</property>
    </session-factory>
</hibernate-configuration>
